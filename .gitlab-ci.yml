include:
  - project: "templates/security/tfsec-scan"
    ref: v1.8.2
    file: "tfsec-scan.yml"
  - project: templates/infra-pipelines
    ref: tf-1.0
    file: terraform-pipeline.yml



variables:
  AWS_DEPLOYMENT_ROLE: "fm-prod-gdn-gitlab-runner-deployment-role"


stages:
  - test
  - plan
  - deploy

# tfsec
tfsec-scan:
  extends: .tfsec-scan
  stage: test
  artifacts:
    name: Terraform security analysis
    expire_in: 1 week
    when: always
    paths:
      - tfsec
  only:
    refs:
      - branches
  except:
    - master

# has validation and planning!
plan_terraform_feature:
  extends: .plan_terraform_http
  stage: plan
  variables:
    CODE_PATH: feature
    WORKSPACE: $CI_COMMIT_REF_NAME
  only:
    refs:
      - branches
    changes:
      - infra/feature/*
      - infra/modules/**/*
      - src/**/*
  except:
    - master
    - staging

plan_terraform_staging:
  extends: .plan_terraform_http
  stage: plan
  variables:
    CODE_PATH: staging
    WORKSPACE: $CI_COMMIT_REF_NAME
  only:
    refs:
      - staging
    changes:
      - infra/staging/*
      - infra/modules/**/*
      - src/**/*
  except:
    - master

plan_terraform_master:
  extends: .plan_terraform_http
  stage: plan
  variables:
    CODE_PATH: prod
    WORKSPACE: $CI_COMMIT_REF_NAME
  only:
    refs:
      - master
    changes:
      - infra/prod/*
      - infra/modules/**/*
      - src/**/*

deploy_terraform_feature:
  extends: .deploy_terraform_http
  stage: deploy
  variables:
    CODE_PATH: feature
    WORKSPACE: $CI_COMMIT_REF_NAME
  environment:
    name: $CI_COMMIT_REF_NAME
  only:
    refs:
      - branches
    changes:
      - infra/feature/*
      - infra/modules/**/*
      - src/**/*
  except:
    - master
    - staging

deploy_terraform_staging:
  extends: .deploy_terraform_http
  stage: deploy
  variables:
    CODE_PATH: staging
    WORKSPACE: $CI_COMMIT_REF_NAME
  environment:
    name: $CI_COMMIT_REF_NAME
    on_stop: destroy_staging
  only:
    refs:
      - staging
    changes:
      - infra/staging/*
      - infra/modules/**/*
      - src/**/*
  except:
    - master

deploy_terraform_prod:
  extends: .deploy_terraform_http
  stage: deploy
  variables:
    CODE_PATH: prod
    WORKSPACE: $CI_COMMIT_REF_NAME
  environment:
    name: $CI_COMMIT_REF_NAME
    on_stop: destroy_prod
  only:
    refs:
      - master
    changes:
      - infra/prod/*
      - infra/modules/**/*
      - src/**/*

destroy_staging:
  extends: .destroy_terraform_http
  stage: deploy
  variables:
    CODE_PATH: staging
    WORKSPACE: $CI_COMMIT_REF_NAME
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  only:
    refs:
      - staging
  when: manual
  except:
    - master
  allow_failure: true

destroy_prod:
  extends: .destroy_terraform_http
  stage: deploy
  variables:
    CODE_PATH: prod
    WORKSPACE: $CI_COMMIT_REF_NAME
  environment:
    name: $CI_COMMIT_REF_NAME
    action: stop
  only:
    refs:
      - master
  when: manual
  allow_failure: true
